What is Python ?
• Python is a popular programming language.
• It was created by Guido van Rossum, and released in 1991.
• It is used for:
  • web development (server-side),
  • software development,
  • mathematics,
  • system scripting.
  • Data Science

Why Python?
• Python works on different platforms (Windows, Mac, Linux, Raspberry Pi, etc).
• Python has a simple syntax similar to the English language.
• Python has syntax that allows developers to write programs with fewer lines than some other programming languages.

-------------------------------------------------------------------

Variables:
• Definition: Variables in Python are used to store data that can be referenced and manipulated throughout the program. They act as placeholders for values.
• Use Case in Real Life: Variables can be used to store user information in a registration form. For example, name, age, and height could store the respective details of a user.

#Assigning values to the Variables
name = "Jhon Doe"
age = 30
height  = 5.9

--------------------------------------------------------------------

Data Types:
• Definition: Data types specify the type of data that a variable can hold. Common data types in Python include integers, floats, strings, lists, tuples, dictionaries, and booleans.
• Use Case in Real Life: Data types are used to model different kinds of information. For example, a dictionary can store user profiles in a social media application where keys are 
  profile attributes and values are the corresponding data.

#Integer
num = 10

#Inbuilt func and operations for Integer
print(abs(num))      #Absolute value
print(bin(num))      #Binary representation
print(hex(num))      #hexadecimal representation

print(pow(num,2))      #Power function (num^2)
print(divmod(num,3))   #Quotient and remainder

#Float
price = 99.99

#Inbuilt func and operations for Float
print(round(price))    #Rounding
print(abs(price))      #Absolute value
print(int(price))      #convert to integer

print(float("123.45"))      #Convert string to float
print(price.is_integer)     #Check if the float is an integer

#String
greeting = "Hello, World!"

#Inbuilt func and operations for String
print(greeting.lower())      # Convert to lowercase
print(greeting.upper())      # Convert to uppercase
print(greeting.replace("World", "Python"))      # Replace Substring
print(greeting.split())      # Split string into a list
print(greeting.find("World"))      # Find the Starting index
print(len(greeting))      # Length of the String

#List
fruits = ["apple", "banana", "cherry"]

#Inbuilt func and operations for list
fruits.append("orange")      #Append an element
fruits.extend(["grape", "melon"])      #Extend list with another list
fruits.remove("orange")      #remove an element
fruits.pop()      #Remove last element
fruits.sort()      #sort the list
print(fruits)
print(len(fruits))      #Length of the list
print(fruits.index("cherry"))      #Find index of the element
print("apple" in fruits)      #Check if the element is in the list or not

#Tuple
coordinates = (10.0, 20.0)

#Inbuilt func and operations for Tuple
print(coordinates.count(10.0))    #Count occurrences of a value
print(coordinates.index(20.0))    #Find index of the element
print(len(coordinates))    #length of the tuple

#Dictionary
Person = {"name": "John", "Age": 30}

#Inbuilt func and operations for Dictionary
print(person.keys())      #Get all keys
print(person.values())      #Get all values
print(person.items())      #Get all key-value pairs
print(person.get("name"))      #Get value of key
person.update({"height": 180})      #Update height with another dictionary
person.pop("age")      #Remove Key-value pair by key
print(person)
print(len(length))      #Length of the Dictonary

#Set
se = {1,2,3,4}

#not allow duplicates
se={1,1,1,1,1}
#length
print(len(se))
#add
se.add(9)
se.update({10,11,13})      #Update another set     
#remove
se.remove(10)


#Boolean
is_active = True

#Inbuilt func and operations for Dictionary
print(int(is_active))      #convert to integer(1 for True, 0 for False)
print(bool(0))      #convert integer to boolean (False)
print(bool(1))      #convert integer to boolean (True)
print(bool("Hello"))      #convert String to boolean (True)
print(is_active and False)      #Logical AND
print(is_active or False)      #Logical OR
print(not is_active)      #Logical NOT

Conditionals:
Definition: Conditional statements in Python (if, elif, else) are used to execute code based on certain conditions.
Use Case in Real Life: Conditionals can be used in an e-commerce application to provide different pricing tiers based on user membership levels (eg, standard, premium, VIP).


#Basic if-elif-else statement
age=20
if age < 18:
    print("Minor")
elif age >= 18 and age < 65:
    print("Adult")
else:
    print("Senior")

#Checking Even or Odd Number
number = 42
if  number % 2 == 0:
    print("Even Number")
else:
    print("Odd Number")


# Grade Evaluation
score = 85
if score >= 90:
    print("Grade: A")
elif score  >= 80:
    print("Grade: B")
elif score  >= 70:
    print("Grade: C")
elif score  >= 60:
    print("Grade: D")
else:
    print("Grade: F")


# Temprature Check
temprature = 30
if temprature > 30:
    print("It's a hot day")
elif temprature >= 20:
    print("It's a nice day")
else:
    print("It's a cold day")


# Nested Condition for BMI Calculation
weight = 70  #in kg
height = 1.75  #in meters
bmi = weight / (height ** 2)
if bmi < 18.5:
    print("Underweight")
else:
    if bmi < 24.9:
        print("Normal weight")
    else:
        if bmi < 29.9:
            print("Overweight")
        else:
            print("Obesity")


# Traffic Light System
traffic_light = "Green"
if traffic_light == "Red":
    print("Stop")
elif traffic_light == "Yellow":
    print("Caution")
elif traffic_light == "Green":
    print("Go")
else:
    print("Invalid traffic light color")


# user login status
is_logged_in = True
has_permission = True
if is_logged_in:
    if has_permission:
      print("Access grannted")
    else:
      print("Access Denied")
else:
    print("Access Denied")


# Multiple Conditiond (AND/OR)
temprature = 25
weather = "Sunny"
if temprature > 20 and weather == "Sunny":
    print("it's a great day for a walk")
elif temprature <= 20 or weather != "Sunny":
    print("Maybe stay indoors today")
else:
    print("Weather cnditions are unusual")

---------------------------------------------------------------------------------------------------------------------------------------------------

Loops:
Definition: Loops are used to execute a block of code repeatedly. Python supports for and while loops.
Use Case in Real Life: Loops can be used to process items in a list. For instance, in a payroll system, a for loop could iterate through a list of employees and calculate their salaries.

# For Loop
for i in range(5):
    print(i)

#iterating over a list
fruits = ["apple", "banana", "Cherry", "date"]
for fruit in fruits:
    print(fruit)

#Iterating over a String
greeting  = "Hello"
for char in greeting:
    print(char) 

#Iterating over a String
person = {"name": "John", "age": 30, "city": "New York"}
for key, value in person.items():
    print(f"{key}: {value}")

#using the 'range()' func with a Step
for i in range(0,10,2):
    print(i)

# Nested for loop
for i in range(3):
    for j in range(2):
      print(f"i = {i} , j = {j}")

# using the 'enumerate()' Function
fruits = ["apple", "banana", "cherry"]
for index, fruit in enumerate(fruits)
    print(f"{index} : {fruit}")



# While loop
count = 0
while count < 5:
    print(count)
    count += 1

# While loop using Break
count = 0
while True:
    print(count)
    count += 1
    if count >= 5
        break

# While loop using continue
count = 0
while count < 10:
    count += 1
    if count % 2 == 0:
        continue
            print(count)

# While loop for validation
password = ""
while len(password) < 8:
    password = input("Enter a password that should be more than 8 digits: ")
    if len(password) < 8:
        print("Password is too short.")
    else:
        print("Password accepted.")
